try{window.performance.mark("async-atlaskit-notification-indicator.js:eval-start")}catch(e){}(window.webpackJsonp=window.webpackJsonp||[]).push([["async-atlaskit-notification-indicator"],{"./node_modules/@atlaskit/badge/dist/es2019/components/Container.js":function(t,e,i){"use strict";const n=i("./node_modules/styled-components/dist/styled-components.browser.esm.js").default.span(["",";border-radius:2em;display:inline-block;font-size:12px;font-weight:normal;line-height:1;min-width:1px;padding:0.16666666666667em 0.5em;text-align:center;"],(t=>`\n    background-color: ${t.backgroundColor};\n    color: ${t.textColor};\n  `));e.a=n},"./node_modules/@atlaskit/badge/dist/es2019/components/Format.js":function(t,e,i){"use strict";var n=i("./node_modules/react/index.js"),s=i.n(n);const{Fragment:a}=s.a;e.a=t=>{let e="",{children:i=0,max:n=0}=t;return i<0&&(i=0),n<0&&(n=0),e=n&&n<i?`${n}+`:i===1/0?"\u221e":i,s.a.createElement(a,null,e)}},
"./node_modules/@atlaskit/badge/dist/es2019/components/index.js":function(t,e,i){"use strict";var n=i("./node_modules/@babel/runtime/helpers/extends.js"),s=i.n(n),a=i("./node_modules/react/index.js"),o=i.n(a),r=i("./node_modules/@atlaskit/theme/dist/es2019/components/Theme.js"),d=i("./node_modules/@atlaskit/badge/dist/es2019/theme.js"),c=i("./node_modules/@atlaskit/badge/dist/es2019/components/Container.js"),l=i("./node_modules/@atlaskit/badge/dist/es2019/components/Format.js");e.a=({theme:t,appearance:e="default",children:i=0,max:n=99,testId:a})=>o.a.createElement(d.a.Provider,{value:t},o.a.createElement(r.a.Consumer,null,(({mode:t})=>o.a.createElement(d.a.Consumer,{appearance:e,mode:t},(t=>o.a.createElement(c.a,s()({},t,{"data-testid":a}),"string"==typeof i?i:o.a.createElement(l.a,{max:n},i)))))))},"./node_modules/@atlaskit/badge/dist/es2019/theme.js":function(t,e,i){"use strict";i.d(e,"b",(function(){return o})),i.d(e,"c",(function(){return r})),i.d(e,"a",(function(){return d}))
;var n=i("./node_modules/@atlaskit/theme/dist/es2019/utils/createTheme.js");function s(t,e){var i=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),i.push.apply(i,n)}return i}function a(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}const o={added:{light:"#E3FCEF",dark:"#E3FCEF"},default:{light:"#DFE1E6",dark:"#3B475C"},important:{light:"#DE350B",dark:"#DE350B"},primary:{light:"#0052CC",dark:"#4C9AFF"},primaryInverted:{light:"#FFFFFF",dark:"#9FB0CC"},removed:{light:"#FFEBE6",dark:"#FFEBE6"}},r={added:{light:"#006644",dark:"#006644"},default:{light:"#172B4D",dark:"#E6EDFA"},important:{light:"#FFFFFF",dark:"#FFFFFF"},primary:{light:"#FFFFFF",dark:"#0D1424"},primaryInverted:{light:"#0747A6",dark:"#0D1424"},removed:{light:"#BF2600",dark:"#BF2600"}
},d=Object(n.a)((({appearance:t,mode:e})=>"object"==typeof t?function(t){for(var e=1;e<arguments.length;e++){var i=null!=arguments[e]?arguments[e]:{};e%2?s(Object(i),!0).forEach((function(e){a(t,e,i[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(i)):s(Object(i)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(i,e))}))}return t}({backgroundColor:o.default.light,textColor:r.default.light},t):{backgroundColor:o[t][e],textColor:r[t][e]}))},"./node_modules/@atlaskit/notification-indicator/dist/es2019/index.js":function(t,i,n){"use strict";n.r(i),n.d(i,"NotificationIndicator",(function(){return p}));var s=n("./node_modules/@babel/runtime/helpers/defineProperty.js"),a=n.n(s),o=n("./node_modules/react/index.js"),r=n.n(o),d=n("./node_modules/@atlaskit/badge/dist/es2019/components/index.js");const c="navigation";class l extends o.Component{constructor(...t){super(...t),a()(this,"visibilityChangesSinceTimer",0),
a()(this,"state",{count:null}),a()(this,"onVisibilityChange",(()=>{this.props.refreshOnVisibilityChange&&this.shouldRefresh()&&(this.visibilityChangesSinceTimer++,this.refresh("visibility"))})),a()(this,"shouldRefresh",(()=>!document.hidden||this.props.refreshOnHidden)),a()(this,"timerTick",(()=>{this.visibilityChangesSinceTimer=0,this.refresh("timer")})),a()(this,"handleAnalytics",(t=>{const{newCount:e,oldCount:i,source:n}=t;if(this.props.createAnalyticsEvent&&e>0&&0===i){this.props.createAnalyticsEvent({actionSubject:"notificationIndicator",action:"activated",attributes:{badgeCount:e,refreshSource:n}}).fire(c)}if(this.props.createAnalyticsEvent&&e!==i){this.props.createAnalyticsEvent({actionSubject:"notificationIndicator",action:"updated",attributes:{oldCount:i,newCount:e,refreshSource:n}}).fire(c)}})),a()(this,"refresh",(async t=>{if(!this.notificationLogProvider)return;if(!this.shouldRefresh())return;const i={source:t,visibilityChangesSinceTimer:this.visibilityChangesSinceTimer
},n=this.props.onCountUpdating&&this.props.onCountUpdating(i)||{};if(!n.skip)try{const e=n.countOverride||(await this.notificationLogProvider.countUnseenNotifications({queryParams:{currentCount:this.state.count||0}})).count;if(null===this.state.count||this.state.count!==e){const i={oldCount:this.state.count||0,newCount:e,source:t};this.handleAnalytics(i),this.props.onCountUpdated&&this.props.onCountUpdated(i),this.setState({count:e})}}catch(e){}}))}async componentDidMount(){this.notificationLogProvider=await this.props.notificationLogProvider,this.refresh("mount"),this.updateInterval(),document.addEventListener("visibilitychange",this.onVisibilityChange)}componentDidUpdate(t){t.refreshRate!==this.props.refreshRate&&this.updateInterval()}componentWillUnmount(){this.intervalId&&clearInterval(this.intervalId),document.removeEventListener("visibilitychange",this.onVisibilityChange)}updateInterval(){const{refreshRate:t}=this.props;this.intervalId&&clearInterval(this.intervalId),
t&&t>0&&(this.intervalId=window.setInterval(this.timerTick,t))}render(){const{count:t}=this.state,{appearance:e,max:i}=this.props;return t?r.a.createElement("div",{"data-test-selector":"NotificationIndicator"},r.a.createElement(d.a,{max:i,appearance:e},t)):null}}l.displayName="NotificationIndicator",a()(l,"defaultProps",{appearance:"important",max:9,refreshRate:0,refreshOnHidden:!1,refreshOnVisibilityChange:!0});var u=l,h=n("./node_modules/@atlaskit/analytics-next/dist/es2019/hocs/withAnalyticsEvents.js");const p=Object(h.a)()(u)}}]);try{window.__jsEvalStop("async-atlaskit-notification-indicator.js")}catch(e){}
//# sourceMappingURL=https://statlas.prod.atl-paas.net/jira-frontend-source-maps/assets/async-atlaskit-notification-indicator.3383e1a25c1d53dce16d.8.js.map